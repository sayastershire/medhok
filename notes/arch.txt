VoxCeleb (arch referred to by Shon et al.):
[Feature input]
- Mono
- 16-bit
- 16kHz for consistency
- Magnitude Spectrogram: 25ms hamming window, 10ms step; size: 512x300 for 3 seconds
- Mean and Variance normalisation is crucial for almost 10% increase in classification accuracy.
- Not using pre-processing features such as VAD, silence removal, or removal of unvoiced speech
[Arch]
- Basing on VGG-M (Return of the Devil in the Details: Delving Deep into Convolutional Nets by K. Chatfield et al.)

CNN-M (referred to as VGG-M by VoxCeleb):
model = tf.keras.Sequential([
            # conv1
            tf.keras.layers.Conv2D(96, (7, 7), 2, input_shape=_shape),
            tf.keras.layers.MaxPooling2D(2, 2),
            # conv2
            tf.keras.layers.ZeroPadding2D(1),
            tf.keras.layers.Conv2D(256, (5, 5), 2),
            tf.keras.layers.MaxPooling2D(2, 2),
            # conv3
            tf.keras.layers.ZeroPadding2D(1),
            tf.keras.layers.Conv2D(512, (3, 3), 1),
            # conv4
            tf.keras.layers.ZeroPadding2D(1),
            tf.keras.layers.Conv2D(512, (3, 3), 1),
            # conv5
            tf.keras.layers.ZeroPadding2D(1),
            tf.keras.layers.Conv2D(512, (3, 3), 1),
            tf.keras.layers.MaxPooling2D(2, 2),
            # full6
            tf.keras.layers.Dense(4096, activation=tf.nn.relu),
            tf.keras.layers.Dropout(0.5),
            # full7
            tf.keras.layers.Dense(4096, activation=tf.nn.relu),
            tf.keras.layers.Dropout(0.5),
            # full8
            tf.keras.layers.Dense(16, activation=tf.nn.softmax)
        ])



